@startuml

== 4. Spóra szórás ==
actor Mycologist
participant Fungus
participant GameBoard
participant Tecton

Mycologist -> Fungus: spreadSpores()
activate Fungus

' Fungus -> Fungus: checkCharge()
Fungus --> Mycologist: return int

alt Charge == 2 (Közvetlen szomszédokra spreadeli)
    Fungus -> GameBoard: getNeighbors(Tecton current)
    activate GameBoard
    GameBoard --> Fungus: return List<Tecton>
    deactivate GameBoard
    loop minden szomszédos Tecton
        Fungus -> Tecton: spreadSpores()
    end
end

alt Charge == 3 (Szomszédok szomszédaira)
    Fungus -> GameBoard: getNeighbors(Tecton current)
    activate GameBoard
    GameBoard --> Fungus: return List<Tecton>
    deactivate GameBoard
    loop minden szomszédos Tecton
        Fungus -> GameBoard: getNeighbors(Tecton neighbor)
        activate GameBoard
        GameBoard --> Fungus: return List<Second-level Tecton>
        deactivate GameBoard
        loop minden másodlagos szomszéd
            Fungus -> Tecton: spreadSpores()
        end
    end
end

' Decrease vagy increase 
'Fungus -> Fungus: handleCharge()

deactivate Fungus

@enduml